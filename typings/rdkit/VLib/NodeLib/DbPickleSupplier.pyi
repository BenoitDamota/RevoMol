from rdkit import RDConfig as RDConfig
from rdkit.VLib.Supply import SupplyNode as SupplyNode
from typing import Any, Optional

class _lazyDataSeq:
    cursor: Any = ...
    cmd: Any = ...
    def __init__(
        self,
        cursor: Any,
        cmd: Any,
        pickleCol: int = ...,
        depickle: int = ...,
        klass: Optional[Any] = ...,
    ) -> None: ...
    def __iter__(self) -> Any: ...
    def next(self): ...

class _dataSeq(_lazyDataSeq):
    cursor: Any = ...
    cmd: Any = ...
    res: Any = ...
    rowCount: int = ...
    idx: int = ...
    def __init__(
        self, cursor: Any, cmd: Any, pickleCol: int = ..., depickle: int = ...
    ) -> None: ...
    def __iter__(self) -> Any: ...
    def next(self): ...
    def __len__(self): ...
    def __getitem__(self, idx: Any): ...

class DbPickleSupplyNode(SupplyNode):
    def __init__(
        self, cursor: Any, cmd: Any, binaryCol: Any, **kwargs: Any
    ) -> None: ...
    def reset(self) -> None: ...
    def next(self): ...

def GetNode(dbName: Any, tableName: Any): ...
