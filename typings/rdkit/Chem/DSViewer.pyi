from rdkit import Chem as Chem
from typing import Any

class Displayable:
    doc: Any = ...
    id: Any = ...
    visible: bool = ...
    children: Any = ...
    def __init__(self, doc: Any, id: int = ...) -> None: ...
    def Select(self, atoms: Any = ..., state: bool = ..., recurse: bool = ...): ...
    def Hide(self, recurse: bool = ...) -> None: ...
    def Show(self, recurse: bool = ...) -> None: ...
    def ShowOnly(self, recurse: bool = ...) -> None: ...
    def __del__(self) -> None: ...

class MolViewer:
    app: Any = ...
    doc: Any = ...
    displayables: Any = ...
    def __init__(self, force: int = ..., title: str = ..., **kwargs: Any) -> None: ...
    def DeleteAll(self) -> None: ...
    def DeleteAllExcept(self, excludes: Any) -> None: ...
    def ShowMol(
        self,
        mol: Any,
        name: str = ...,
        showOnly: bool = ...,
        highlightFeatures: Any = ...,
        molB: str = ...,
        confId: int = ...,
        zoom: bool = ...,
    ) -> None: ...
    def LoadFile(self, filename: Any, name: Any, showOnly: bool = ...): ...
    def GetSelectedAtoms(self, whichSelection: str = ...): ...
    def HighlightAtoms(
        self, indices: Any, where: Any, extraHighlight: bool = ...
    ) -> None: ...
    def SelectAtoms(
        self, itemId: Any, atomIndices: Any, selName: str = ...
    ) -> None: ...
    def SetDisplayUpdate(self, val: Any) -> None: ...
    def GetAtomCoords(self, sels: Any): ...
    def AddPharmacophore(
        self, locs: Any, colors: Any, label: Any, sphereRad: float = ...
    ) -> None: ...
    def SetDisplayStyle(self, obj: Any, style: str = ...) -> None: ...
    def HideAll(self) -> None: ...
    def HideObject(self, objName: Any) -> None: ...
    def DisplayObject(self, objName: Any) -> None: ...
    def Zoom(self, objName: Any) -> None: ...
    def SelectProteinNeighborhood(
        self,
        aroundObj: Any,
        inObj: Any,
        distance: float = ...,
        name: str = ...,
        showSurface: bool = ...,
    ) -> None: ...
    def Redraw(self) -> None: ...
