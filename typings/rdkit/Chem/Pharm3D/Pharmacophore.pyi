from rdkit import Geometry as Geometry
from rdkit.Chem import ChemicalFeatures as ChemicalFeatures
from rdkit.RDLogger import logger as logger
from typing import Any, Optional

class Pharmacophore:
    def __init__(self, feats: Any, initMats: bool = ...) -> None: ...
    def getFeatures(self): ...
    def getFeature(self, i: Any): ...
    def getUpperBound(self, i: Any, j: Any): ...
    def getLowerBound(self, i: Any, j: Any): ...
    def setUpperBound(
        self, i: Any, j: Any, val: Any, checkBounds: bool = ...
    ) -> None: ...
    def setLowerBound(
        self, i: Any, j: Any, val: Any, checkBounds: bool = ...
    ) -> None: ...
    def getUpperBound2D(self, i: Any, j: Any): ...
    def getLowerBound2D(self, i: Any, j: Any): ...
    def setUpperBound2D(
        self, i: Any, j: Any, val: Any, checkBounds: bool = ...
    ) -> None: ...
    def setLowerBound2D(
        self, i: Any, j: Any, val: Any, checkBounds: bool = ...
    ) -> None: ...

class ExplicitPharmacophore:
    def __init__(
        self, feats: Optional[Any] = ..., radii: Optional[Any] = ...
    ) -> None: ...
    def getFeatures(self): ...
    def getRadii(self): ...
    def getFeature(self, i: Any): ...
    def getRadius(self, i: Any): ...
    def setRadius(self, i: Any, rad: Any) -> None: ...
    def initFromString(self, text: Any) -> None: ...
    def initFromFile(self, inF: Any) -> None: ...
    def initFromLines(self, lines: Any) -> None: ...
