from rdkit import Chem as Chem
from rdkit.Chem.rdDistGeom import EmbedMolecule as EmbedMolecule
from typing import Any, Optional

class StereoEnumerationOptions:
    tryEmbedding: Any = ...
    onlyUnassigned: Any = ...
    onlyStereoGroups: Any = ...
    maxIsomers: Any = ...
    rand: Any = ...
    unique: Any = ...
    def __init__(
        self,
        tryEmbedding: bool = ...,
        onlyUnassigned: bool = ...,
        maxIsomers: int = ...,
        rand: Optional[Any] = ...,
        unique: bool = ...,
        onlyStereoGroups: bool = ...,
    ) -> None: ...

class _BondFlipper:
    bond: Any = ...
    def __init__(self, bond: Any) -> None: ...
    def flip(self, flag: Any) -> None: ...

class _AtomFlipper:
    atom: Any = ...
    def __init__(self, atom: Any) -> None: ...
    def flip(self, flag: Any) -> None: ...

class _StereoGroupFlipper:
    def __init__(self, group: Any) -> None: ...
    def flip(self, flag: Any) -> None: ...

class _RangeBitsGenerator:
    nCenters: Any = ...
    def __init__(self, nCenters: Any) -> None: ...
    def __iter__(self) -> Any: ...

class _UniqueRandomBitsGenerator:
    nCenters: Any = ...
    maxIsomers: Any = ...
    rand: Any = ...
    already_seen: Any = ...
    def __init__(self, nCenters: Any, maxIsomers: Any, rand: Any) -> None: ...
    def __iter__(self) -> Any: ...

def GetStereoisomerCount(m: Any, options: Any = ...): ...
def EnumerateStereoisomers(m: Any, options: Any = ..., verbose: bool = ...) -> None: ...
