import Boost.Python

APolar: Any
LeeRichards: Any
NACCESS: Any
OONS: Any
Polar: Any
Protor: Any
ShrakeRupley: Any
Unclassified: Any

def CalcSASA(RDKit, boost) -> Any: ...
def MakeFreeSasaAPolarAtomQuery(*args, **kwargs) -> Any: ...
def MakeFreeSasaPolarAtomQuery(*args, **kwargs) -> Any: ...
def classifyAtoms(RDKit) -> Any: ...

class SASAAlgorithm(Boost.Python.enum):
    LeeRichards: Any = ...
    ShrakeRupley: Any = ...
    names: Any = ...
    values: Any = ...
    __slots__: Any = ...

class SASAClass(Boost.Python.enum):
    APolar: Any = ...
    Polar: Any = ...
    Unclassified: Any = ...
    names: Any = ...
    values: Any = ...
    __slots__: Any = ...

class SASAClassifier(Boost.Python.enum):
    NACCESS: Any = ...
    OONS: Any = ...
    Protor: Any = ...
    names: Any = ...
    values: Any = ...
    __slots__: Any = ...

class SASAOpts(Boost.Python.instance):
    __instance_size__: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def __reduce__(self) -> Any: ...
    @property
    def algorithm(self) -> Any: ...
    @algorithm.setter
    def algorithm(self, val: Any) -> None: ...
    @property
    def classifier(self) -> Any: ...
    @classifier.setter
    def classifier(self, val: Any) -> None: ...
    @property
    def probeRadius(self) -> Any: ...
    @probeRadius.setter
    def probeRadius(self, val: Any) -> None: ...
