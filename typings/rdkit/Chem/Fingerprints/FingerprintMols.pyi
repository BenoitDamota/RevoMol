from rdkit import Chem as Chem, DataStructs as DataStructs
from rdkit.Chem import MACCSkeys as MACCSkeys
from rdkit.ML.Cluster import Murtagh as Murtagh
from typing import Any, Optional

def error(msg: Any) -> None: ...
def message(msg: Any) -> None: ...
def GetRDKFingerprint(mol: Any): ...
def FoldFingerprintToTargetDensity(fp: Any, **fpArgs: Any): ...
def FingerprintMol(mol: Any, fingerprinter: Any = ..., **fpArgs: Any): ...
def FingerprintsFromSmiles(
    dataSource: Any,
    idCol: Any,
    smiCol: Any,
    fingerprinter: Any = ...,
    reportFreq: int = ...,
    maxMols: int = ...,
    **fpArgs: Any,
): ...
def FingerprintsFromMols(
    mols: Any,
    fingerprinter: Any = ...,
    reportFreq: int = ...,
    maxMols: int = ...,
    **fpArgs: Any,
): ...
def FingerprintsFromPickles(
    dataSource: Any,
    idCol: Any,
    pklCol: Any,
    fingerprinter: Any = ...,
    reportFreq: int = ...,
    maxMols: int = ...,
    **fpArgs: Any,
): ...
def FingerprintsFromDetails(details: Any, reportFreq: int = ...): ...

class FingerprinterDetails:
    def __init__(self) -> None: ...
    def GetMetricName(self): ...
    metric: Any = ...
    def SetMetricFromName(self, name: Any) -> None: ...

def Usage() -> None: ...
def ParseArgs(details: Optional[Any] = ...): ...
