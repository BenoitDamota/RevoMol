from rdkit import DataStructs as DataStructs
from rdkit.DataStructs import TopNContainer as TopNContainer
from typing import Any, Optional

class SimilarityScreener:
    metric: Any = ...
    dataSource: Any = ...
    fingerprinter: Any = ...
    probe: Any = ...
    def __init__(
        self,
        probe: Optional[Any] = ...,
        metric: Optional[Any] = ...,
        dataSource: Optional[Any] = ...,
        fingerprinter: Optional[Any] = ...,
    ) -> None: ...
    def Reset(self) -> None: ...
    def SetProbe(self, probeFingerprint: Any) -> None: ...
    def GetSingleFingerprint(self, probe: Any): ...

class ThresholdScreener(SimilarityScreener):
    threshold: Any = ...
    dataIter: Any = ...
    def __init__(self, threshold: Any, **kwargs: Any) -> None: ...
    def Reset(self) -> None: ...
    def __iter__(self) -> Any: ...
    def next(self): ...
    __next__: Any = ...

class TopNScreener(SimilarityScreener):
    numToGet: Any = ...
    topN: Any = ...
    def __init__(self, num: Any, **kwargs: Any) -> None: ...
    def Reset(self) -> None: ...
    def __iter__(self) -> Any: ...
    def next(self): ...
    __next__: Any = ...
    def __len__(self): ...
    def __getitem__(self, idx: Any): ...
