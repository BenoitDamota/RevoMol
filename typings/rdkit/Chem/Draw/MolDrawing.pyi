from rdkit import Chem as Chem
from typing import Any, Optional

def cmp(t1: Any, t2: Any): ...

periodicTable: Any

class Font:
    face: Any = ...
    size: Any = ...
    weight: Any = ...
    name: Any = ...
    def __init__(
        self,
        face: Optional[Any] = ...,
        size: Optional[Any] = ...,
        name: Optional[Any] = ...,
        weight: Optional[Any] = ...,
    ) -> None: ...

class DrawingOptions:
    dotsPerAngstrom: int = ...
    useFraction: float = ...
    atomLabelFontFace: str = ...
    atomLabelFontSize: int = ...
    atomLabelMinFontSize: int = ...
    atomLabelDeuteriumTritium: bool = ...
    bondLineWidth: float = ...
    dblBondOffset: float = ...
    dblBondLengthFrac: float = ...
    defaultColor: Any = ...
    selectColor: Any = ...
    bgColor: Any = ...
    colorBonds: bool = ...
    noCarbonSymbols: bool = ...
    includeAtomNumbers: bool = ...
    atomNumberOffset: int = ...
    radicalSymbol: str = ...
    dash: Any = ...
    wedgeDashedBonds: bool = ...
    showUnknownDoubleBonds: bool = ...
    coordScale: float = ...
    elemDict: Any = ...

class MolDrawing:
    canvas: Any = ...
    canvasSize: Any = ...
    drawingOptions: Any = ...
    atomPs: Any = ...
    boundingBoxes: Any = ...
    def __init__(
        self, canvas: Optional[Any] = ..., drawingOptions: Optional[Any] = ...
    ) -> None: ...
    def transformPoint(self, pos: Any): ...
    molTrans: Any = ...
    currAtomLabelFontSize: Any = ...
    drawingTrans: Any = ...
    def scaleAndCenter(
        self,
        mol: Any,
        conf: Any,
        coordCenter: bool = ...,
        canvasSize: Optional[Any] = ...,
        ignoreHs: bool = ...,
    ) -> None: ...
    currDotsPerAngstrom: Any = ...
    activeMol: Any = ...
    bondRings: Any = ...
    def AddMol(
        self,
        mol: Any,
        centerIt: bool = ...,
        molTrans: Optional[Any] = ...,
        drawingTrans: Optional[Any] = ...,
        highlightAtoms: Any = ...,
        confId: int = ...,
        flagCloseContactsDist: int = ...,
        highlightMap: Optional[Any] = ...,
        ignoreHs: bool = ...,
        highlightBonds: Any = ...,
        **kwargs: Any,
    ) -> None: ...
