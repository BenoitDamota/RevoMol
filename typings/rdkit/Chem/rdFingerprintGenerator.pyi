import Boost.Python

AtomPairFP: Any
MorganFP: Any
RDKitFP: Any
TopologicalTorsionFP: Any

def GetAtomPairAtomInvGen(*args, **kwargs) -> Any: ...
def GetAtomPairGenerator(*args, **kwargs) -> Any: ...
def GetCountFPs(*args, **kwargs) -> Any: ...
def GetFPs(*args, **kwargs) -> Any: ...
def GetMorganAtomInvGen(*args, **kwargs) -> Any: ...
def GetMorganBondInvGen(*args, **kwargs) -> Any: ...
def GetMorganFeatureAtomInvGen(*args, **kwargs) -> Any: ...
def GetMorganGenerator(*args, **kwargs) -> Any: ...
def GetRDKitAtomInvGen(*args, **kwargs) -> Any: ...
def GetRDKitFPGenerator(*args, **kwargs) -> Any: ...
def GetSparseCountFPs(*args, **kwargs) -> Any: ...
def GetSparseFPs(*args, **kwargs) -> Any: ...
def GetTopologicalTorsionGenerator(*args, **kwargs) -> Any: ...

class AtomInvariantsGenerator(Boost.Python.instance):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def __reduce__(self) -> Any: ...

class BondInvariantsGenerator(Boost.Python.instance):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def __reduce__(self) -> Any: ...

class FPType(Boost.Python.enum):
    AtomPairFP: Any = ...
    MorganFP: Any = ...
    RDKitFP: Any = ...
    TopologicalTorsionFP: Any = ...
    names: Any = ...
    values: Any = ...
    __slots__: Any = ...

class FingerprintGenerator32(Boost.Python.instance):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def GetCountFingerprint(self, *args, **kwargs) -> Any: ...
    @classmethod
    def GetFingerprint(self, *args, **kwargs) -> Any: ...
    @classmethod
    def GetInfoString(RDKit) -> Any: ...
    @classmethod
    def GetSparseCountFingerprint(self, *args, **kwargs) -> Any: ...
    @classmethod
    def GetSparseFingerprint(self, *args, **kwargs) -> Any: ...
    @classmethod
    def __reduce__(self) -> Any: ...

class FingerprintGenerator64(Boost.Python.instance):
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def GetCountFingerprint(self, *args, **kwargs) -> Any: ...
    @classmethod
    def GetFingerprint(self, *args, **kwargs) -> Any: ...
    @classmethod
    def GetInfoString(RDKit) -> Any: ...
    @classmethod
    def GetSparseCountFingerprint(self, *args, **kwargs) -> Any: ...
    @classmethod
    def GetSparseFingerprint(self, *args, **kwargs) -> Any: ...
    @classmethod
    def __reduce__(self) -> Any: ...
