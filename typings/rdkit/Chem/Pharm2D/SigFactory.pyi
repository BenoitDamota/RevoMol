from rdkit.Chem.Pharm2D import Utils as Utils
from rdkit.Chem.Pharmacophores import cUtils as cUtils
from rdkit.DataStructs import (
    IntSparseIntVect as IntSparseIntVect,
    LongSparseIntVect as LongSparseIntVect,
    SparseBitVect as SparseBitVect,
)
from typing import Any, Optional

class SigFactory:
    featFactory: Any = ...
    useCounts: Any = ...
    minPointCount: Any = ...
    maxPointCount: Any = ...
    shortestPathsOnly: Any = ...
    includeBondOrder: Any = ...
    trianglePruneBins: Any = ...
    skipFeats: Any = ...
    sigKlass: Any = ...
    def __init__(
        self,
        featFactory: Any,
        useCounts: bool = ...,
        minPointCount: int = ...,
        maxPointCount: int = ...,
        shortestPathsOnly: bool = ...,
        includeBondOrder: bool = ...,
        skipFeats: Optional[Any] = ...,
        trianglePruneBins: bool = ...,
    ) -> None: ...
    def SetBins(self, bins: Any) -> None: ...
    def GetBins(self): ...
    def GetNumBins(self): ...
    def GetSignature(self): ...
    def GetBitDescriptionAsText(
        self, bitIdx: Any, includeBins: int = ..., fullPage: int = ...
    ) -> None: ...
    def GetBitDescription(self, bitIdx: Any): ...
    def GetFeatFamilies(self): ...
    def GetMolFeats(self, mol: Any): ...
    def GetBitIdx(self, featIndices: Any, dists: Any, sortIndices: bool = ...): ...
    def GetBitInfo(self, idx: Any): ...
    def Init(self) -> None: ...
    def GetSigSize(self): ...
